stages:
  - containers
  - build
  - test

.image-build:
  stage: containers
  tags:
    - shell
    - docker-build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - if [ "$CI_COMMIT_BRANCH" = "master" ]; then latest_tag="--tag latest"; fi
    - ./tools/docker/image-build.sh --image "${CI_JOB_NAME#image-build-}" --tag $CI_PIPELINE_ID $latest_tag --push

image-build-boardfarm-ci:
  extends: .image-build

image-build-builder/ubuntu/bionic:
  extends: .image-build

.in-prplmesh-builder:
  image:
    name: $CI_REGISTRY_IMAGE/prplmesh-builder-ubuntu-bionic:$CI_PIPELINE_ID
    entrypoint: [""]
  tags:
    - docker
  needs: ["image-build-builder/ubuntu/bionic"]

build-in-docker:
  extends: .in-prplmesh-builder
  stage: build
  variables:
    CMAKE_BUILD_TYPE: "Release"
    EXTRA_CMAKE_FLAGS: ""
  script:
    # To be sure that AutoGenerated is correct, remove it first and check later that it's unchanged.
    - rm -rf framework/tlvf/AutoGenerated common/beerocks/tlvf/AutoGenerated
    - cmake -DBUILD_TESTS=ON -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE -DCMAKE_INSTALL_PREFIX=build/install \
      $EXTRA_CMAKE_FLAGS -H. -Bbuild -G Ninja
    - ninja -C build install
    # Check that the AutoGenerated files are correct by checking git status
    - git update-index -q --refresh
    - git diff-index --exit-code HEAD
  artifacts:
    paths:
      - build/install

boardfarm-tests:
  stage: test
  image: $CI_REGISTRY_IMAGE/prplmesh-boardfarm-ci:$CI_PIPELINE_ID
  script:
    - export USER=''
    - tests/run_bf.sh
  artifacts:
    paths:
      - logs
      - results
    when: always
  needs:
    - job: build-in-docker
    - job: image-build-boardfarm-ci
  tags:
    - boardfarm
